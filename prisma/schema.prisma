// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model BlogPost {
  id          String   @id @default(cuid())
  title       String
  slug        String   @unique
  content     String
  excerpt     String?
  featuredImage String?
  author      String
  published   Boolean  @default(false)
  publishedAt DateTime?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // SEO fields
  metaTitle       String?
  metaDescription String?
  keywords        String?
  
  // Relationships
  reviews         Review[]
  categories      Category[]
  
  @@map("blog_posts")
}

model Category {
  id          String   @id @default(cuid())
  name        String   @unique
  slug        String   @unique
  description String?
  createdAt   DateTime @default(now())
  
  // Relationships
  blogPosts   BlogPost[]
  
  @@map("categories")
}

model Review {
  id          String   @id @default(cuid())
  title       String
  content     String
  rating      Int      @default(5)
  authorName  String
  authorEmail String?
  authorPhone String?
  company     String?
  website     String?
  verified    Boolean  @default(false)
  published   Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // Relationships
  blogPostId  String?
  blogPost    BlogPost? @relation(fields: [blogPostId], references: [id], onDelete: SetNull)
  
  @@map("reviews")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String
  role      UserRole @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  @@map("users")
}

enum UserRole {
  USER
  ADMIN
  EDITOR
}
